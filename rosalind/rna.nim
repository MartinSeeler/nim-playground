import strutils

{.optimization: speed.}

proc toRna(dna: string): string =
  replace(dna, 'T', 'U')

proc reversed(s: string) :string =
  ## Shamefully ripped from algorithm.nim for openarrays

proc reverseComplement(dna: string): string =
  result = ""
  for x in dna:
    result = $(case x
                of 'A': 'T'
                of 'T': 'A'
                of 'C': 'G'
                else: 'C') & result


const input = "TTGATTAGCTCAGCTTTGACGGGCCAATTTTCGGCGAGCCTGAAGTGGCTGCTCCTCTGGAGATGGTAGCCTTTGGTGGGTAAGAGTGGGCTGGCCGCCTCGTCCGCATCTCCGCTAAACACCTATGATCATCGACAGCCATCGATAGATTTCATTATTGCTAACCCCCACCAATATGTGCCCGGCAGGGTTTTTGCAATACCATTCCCAGAAACCTGGCTACGTGCTGCCTGTTGTGACGTGAGGTGAGTGTATCGTATAACAATTACACACGATTGGGCTACCACCGAAAACCTACTTTCTCGGATCGGAAAACTATAGTTCTCCAAGCCCGGCGATCACCGCGTCGTCATGTTCTTGGGACTCGAGGTTTGCAGACCCGTGATACTATAGGAGATCGTGAGTCCCGCCGGTAGTCTCAGGTCTTTTTCAACCTTGTAAGGAAGACCCATGACTAAGGGAACCCTACGTTCGGGGGCCATGCGGTAAGACGAATGTATTCTCAATTATCACAACGAAGGATGACCTGGCTTTCATTGAATTAAATAGGGCAACTATCTACGGCAGGGTATTATCTTTAGAACCGCGGATACCGAACTACGGGTTTTGCCAGGATCGTCCCAAATCTTAAGCGATCCTCAGTATCGACCCTCGGCAGCCTTGCACCTTGGTACACTGGCTTGATCGGGAGTTTTCGCCCGTGTCTTCGATCTGAGGTATAATCAAGTGATTTAATTCTCTACGCTTGTTTAAGTAGATCGATTCTCACTCGTCTCCATGCTACCCAGGTTTGGCGACCCGATAGTATACGGTGTTCTCATGAGAGAATGGCCCAAAAGGAACCGCCCGCTGAAAACCTTTTA"

echo input.reverseComplement()
